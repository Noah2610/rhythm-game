/**
 * Styling for the actual game part of the page.
 */

/**
 * The game wrapper element.
 */
#game {
    --beat-target-size: 120px;
    --beat-size: 80px;

    position: relative;
    overflow: hidden;
    width: 100%;
    height: 100%;
}

/**
 * The row where beat-targets spawn.
 * Should have the same amount of children `.beat-spawn` elements
 * as the `.beat-target-line` has.
 */
.beat-spawn-line {
    position: relative;
    width: 100%;
    height: var(--beat-size);
    display: flex;
    justify-content: space-evenly;
    text-align: center;
}

/**
 * Spawn point for beats.
 * Should be a child of `.beat-spawn-line`.
 */
.beat-spawn {
    position: relative;
    display: block;
    width: var(--beat-target-size);
    height: calc(100vh - 32px - (var(--beat-target-size) / 2));
}

/**
 * The row where all beat-targets are.
 */
.beat-target-line {
    position: absolute;
    width: 100%;
    height: var(--beat-target-size);
    bottom: 32px;
    display: flex;
    justify-content: space-evenly;
    text-align: center;

    border-radius: 64px;
    background-color: rgba(0, 0, 0, 0.3);
    box-shadow: 0 0 16px 16px rgba(0, 0, 0, 0.3);
}

/**
 * These are the targets for the falling beats.
 * The user must press the corresponding button when
 * the beat is ontop of this target.
 */
.beat-target {
    font-size: 64px;
    font-weight: bold;
    color: var(--color-primary);
    width: var(--beat-target-size);
    height: var(--beat-target-size);
    line-height: var(--beat-target-size);
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.5);
    box-shadow: 0 0 16px 16px rgba(0, 0, 0, 0.5);
    text-shadow: 0px 0px 12px;
}

/**
 * A beat is what falls from the top of the screen
 * onto the beat-targets.
 */
.beat {
    position: absolute;
    display: inline-block;
    font-size: 64px;
    color: var(--color-fg);
    width: var(--beat-size);
    height: var(--beat-size);
    line-height: var(--beat-size);
    text-align: center;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.3);
    box-shadow: 0 -16px 14px 10px rgba(0, 0, 0, 0.3);
    /* text-shadow: 0px -8px 12px; */

    transform: translateX(-50%);

    animation: beatFall;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

.beat > div {
    animation:
        beatKeyRotate 1s ease-in-out infinite alternate,
        beatKeyGlow 2s ease-in infinite;
}

/**
 * Animation for falling beats.
 */
@keyframes beatFall {
    0% {
        top: calc(var(--beat-size) * -1);
    }
    100% {
        /* top: calc(var(--beat-size) + 100%); */
        top: calc(100% - (var(--beat-size) / 2));
    }
}

/**
 * Animation for the beat key rotation.
 */
@keyframes beatKeyRotate {
    0% {
        transform: rotate(-45deg);
    }
    100% {
        transform: rotate(45deg);
    }
}

/**
 * Animation for the beat key glowing.
 */
@keyframes beatKeyGlow {
    0% {
        text-shadow: 0 0 0;
    }
    100% {
        text-shadow: 0 0 128px;
    }
}
